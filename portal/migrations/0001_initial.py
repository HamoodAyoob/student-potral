# Generated by Django 4.2.7 on 2025-09-14 14:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BulkUserImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='bulk_imports/')),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher')], max_length=10)),
                ('default_password', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('total_records', models.IntegerField(default=0)),
                ('success_count', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doubt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('question', models.TextField()),
                ('asked_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher')], max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_number', models.CharField(max_length=20, unique=True)),
                ('department', models.CharField(default='BCA', max_length=50)),
                ('qualification', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('semester', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('description', models.TextField(blank=True)),
                ('credits', models.IntegerField(default=4)),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjects', to='portal.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus_id', models.CharField(max_length=20, unique=True)),
                ('registration_number', models.CharField(max_length=20, unique=True)),
                ('semester', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('batch', models.CharField(choices=[('Batch 1', 'Batch 1'), ('Batch 2', 'Batch 2'), ('Batch 3', 'Batch 3'), ('Batch 4', 'Batch 4')], default='Batch 4', max_length=10)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('religion', models.CharField(blank=True, max_length=50)),
                ('caste', models.CharField(blank=True, max_length=50)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('father_name', models.CharField(max_length=100)),
                ('mother_name', models.CharField(max_length=100)),
                ('father_phone', models.CharField(max_length=15)),
                ('mother_phone', models.CharField(max_length=15)),
                ('parent_email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=15)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('assignment', 'New Assignment'), ('result', 'Result Published'), ('material', 'New Material'), ('announcement', 'Announcement'), ('doubt_reply', 'Doubt Reply')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('batch_filter', models.CharField(blank=True, choices=[('Batch 1', 'Batch 1'), ('Batch 2', 'Batch 2'), ('Batch 3', 'Batch 3'), ('Batch 4', 'Batch 4')], max_length=10)),
                ('semester_filter', models.IntegerField(blank=True, null=True)),
                ('students', models.ManyToManyField(blank=True, to='portal.student')),
                ('teachers', models.ManyToManyField(blank=True, to='portal.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('file', models.FileField(upload_to='materials/')),
                ('material_type', models.CharField(choices=[('notes', 'Notes'), ('question_bank', 'Question Bank'), ('reference', 'Reference Material'), ('slides', 'Slides')], default='notes', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='portal.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='HallTicketRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=100)),
                ('exam_date', models.DateField()),
                ('exam_type', models.CharField(choices=[('internal_1', 'Internal Assessment 1'), ('internal_2', 'Internal Assessment 2'), ('internal_3', 'Internal Assessment 3'), ('semester', 'Semester End Exam'), ('assignment', 'Assignment')], max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hall_tickets', to='portal.student')),
            ],
        ),
        migrations.CreateModel(
            name='DoubtReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.TextField()),
                ('replied_at', models.DateTimeField(auto_now_add=True)),
                ('doubt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='portal.doubt')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='doubt',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doubts', to='portal.student'),
        ),
        migrations.AddField(
            model_name='doubt',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.subject'),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('question_file', models.FileField(blank=True, null=True, upload_to='assignments')),
                ('due_date', models.DateTimeField()),
                ('max_marks', models.IntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='portal.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.CharField(choices=[('Batch 1', 'Batch 1'), ('Batch 2', 'Batch 2'), ('Batch 3', 'Batch 3'), ('Batch 4', 'Batch 4')], max_length=10)),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=10)),
                ('period', models.CharField(choices=[('Period 1', '8:30 - 9:25'), ('Period 2', '9:25 - 10:20'), ('Break', '10:20 - 10:40'), ('Period 3', '10:40 - 11:35'), ('Period 4', '11:35 - 12:30'), ('Period 5', '12:30 - 1:30'), ('Lunch Break', '1:30 - 2:15')], max_length=15)),
                ('room', models.CharField(default='LH 5, 3rd Floor', max_length=20)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portal.subject')),
            ],
            options={
                'ordering': ['day', 'period'],
                'unique_together': {('batch', 'day', 'period')},
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_type', models.CharField(choices=[('internal_1', 'Internal Assessment 1'), ('internal_2', 'Internal Assessment 2'), ('internal_3', 'Internal Assessment 3'), ('semester', 'Semester End Exam'), ('assignment', 'Assignment')], max_length=20)),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_marks', models.DecimalField(decimal_places=2, default=100, max_digits=5)),
                ('grade', models.CharField(blank=True, max_length=2)),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True)),
                ('published_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='portal.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'exam_type')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('period', models.CharField(choices=[('Period 1', '8:30 - 9:25'), ('Period 2', '9:25 - 10:20'), ('Break', '10:20 - 10:40'), ('Period 3', '10:40 - 11:35'), ('Period 4', '11:35 - 12:30'), ('Period 5', '12:30 - 1:30'), ('Lunch Break', '1:30 - 2:15')], max_length=15)),
                ('is_present', models.BooleanField(default=False)),
                ('marked_at', models.DateTimeField(auto_now_add=True)),
                ('marked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='portal.teacher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='portal.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.subject')),
            ],
            options={
                'unique_together': {('student', 'subject', 'date', 'period')},
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_file', models.FileField(upload_to='assignments/submissions/')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('marks', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('feedback', models.TextField(blank=True)),
                ('is_late', models.BooleanField(default=False)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='portal.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.student')),
            ],
            options={
                'unique_together': {('assignment', 'student')},
            },
        ),
    ]
